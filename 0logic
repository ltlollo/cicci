=>
(p=>q) = F iff p=T and q=F else = T

<=>
(p<=>q) = T iff p = q else = F


nota
T=>F = F


Pred
	T
	F
	Prop
	Algebraic
	Pred & Pred
	Pred | Pred
	Pred => Pred
	Pred <=> Pred


Precedence
1. !
2. &
3. |
4. =>
5. <=>


	T & T => F | !T
<=> <!>
	T & T => F | F
<=> <&>
	T => F | F
<=> <&>
	T => F
<=> < => >
	F

T V N T A F th F A N T iff F

T V F A F th F A F iff F

T V F th F iff F

T th F iff F

F iff F

T

Proprieties
Assoc:
a A (b A c) <=> (a A b) A c
a V (b V c) <=> (a V b) V c
Distrib:
a A (b V c) <=> (a A b) V (a A c)
a V (b A c) <=> (a V b) A (a V c)

De Morgan:
!(a A b) <=> !a V !b
!(a V b) <=> !a A !b

MIO: ! distributes... F2' = <=>, F1 = !, F2 = A, F1(A) = V
F2'(F1(F2(F0, F0')), F1(F2).(F1(F0), F1(F0')))
^ Demorgan structure, note, And is the 0 rank 2 function then !A = V the 1 rank 2
or.. And = 1000, !A = Bitreverse(~A*) = 1110 = V
// A*(a, b) = A(b, a)
// Commutativity F2 = F2*

TT
TF
FT
FF

fff
tft
ftt
ttt



Negation
!!a = a
Excluded Middle
a V !a = T
Contraddiction
a A !a = F 

V-simpl

N 1 V (2 V 3)



